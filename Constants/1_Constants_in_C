Once defined cannot be changed later in the code

Syntax:  #define NAME value (NAME also called Macro)
Job of preprocessor (not compiler) to replace NAME with value.

###########################
#include <stdio.h>
#define PI 3.14159

int main()
{
	printf("%.5f", PI);
	return 0;
}
#############################



We can use macros like functions

#########################################################
#include <stdio.h>
#define add(x, y) x+y

int main()
{
	printf("addition of two numbers: %d", add(4, 3));
	return 0;
}
###########################################################


We can write multiple lines using \
############################################################

#include <stdio.h>
#define greater(x, y) if(x > y) \
        printf("%d is greater than %d\n", x, y); \
        else \
        printf("%d is lesser than %d\n", x, y);

int main()
{
        greater(5, 6);
        return 0;
}
############################################################


First expansion then evaluation
############################################################
#include <stdio.h>
#define add(x, y) x+y

int main()
{
        printf("result of expression a * b + c is: %d", 5 * add(4, 3));
        return 0;
}

result of expression a * b + c is: 23
###########################################################################

Some predefined macros like __DATE__, __TIME__ can print current date and time.
###############################################
#include <stdio.h>

int main()
{
	printf("Date: %s\n", __DATE__);
	printf("Time: %s\n", __TIME__);
	return 0;
}
######################################################
